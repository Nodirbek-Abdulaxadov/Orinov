// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Orinov.Data.Context;

#nullable disable

namespace Orinov.Data.Migrations
{
    [DbContext(typeof(OrinovDbContext))]
    partial class OrinovDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Orinov.Domain.Entities.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("PlaceEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlaceRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlaceUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TitleRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TitleUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("Orinov.Domain.Entities.Cvmodel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Cvmodels");
                });

            modelBuilder.Entity("Orinov.Domain.Entities.EducationalBackground", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CVModelId")
                        .HasColumnType("integer");

                    b.Property<string>("DegreeEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DegreeRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DegreeUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EndYear")
                        .HasColumnType("integer");

                    b.Property<string>("FieldOfResearchEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FieldOfResearchRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FieldOfResearchUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StartYear")
                        .HasColumnType("integer");

                    b.Property<string>("SupervisorEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SupervisorRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SupervisorUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ThesisEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ThesisRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ThesisUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EducationalBackgrounds");
                });

            modelBuilder.Entity("Orinov.Domain.Entities.Employment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CVModelId")
                        .HasColumnType("integer");

                    b.Property<string>("CompanyEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EndYear")
                        .HasColumnType("integer");

                    b.Property<string>("PositionEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PositionRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PositionUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StartYear")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Employments");
                });

            modelBuilder.Entity("Orinov.Domain.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("PlaceEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlaceRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlaceUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SpeakerEn")
                        .HasColumnType("text");

                    b.Property<string>("SpeakerRu")
                        .HasColumnType("text");

                    b.Property<string>("SpeakerUz")
                        .HasColumnType("text");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TitleRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TitleUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Orinov.Domain.Entities.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("EventId")
                        .HasColumnType("integer");

                    b.Property<int?>("EventsId")
                        .HasColumnType("integer");

                    b.Property<int>("FilePath")
                        .HasColumnType("integer");

                    b.Property<int?>("PublicationId")
                        .HasColumnType("integer");

                    b.Property<int?>("PublicationsId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("PublicationId");

                    b.ToTable("FileModels");
                });

            modelBuilder.Entity("Orinov.Domain.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CVModelId")
                        .HasColumnType("integer");

                    b.Property<string>("CommentEn")
                        .HasColumnType("text");

                    b.Property<string>("CommentRu")
                        .HasColumnType("text");

                    b.Property<string>("CommentUz")
                        .HasColumnType("text");

                    b.Property<string>("DegreeEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DegreeRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DegreeUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Orinov.Domain.Entities.PersonalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AddressRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AddressUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CVModelId")
                        .HasColumnType("integer");

                    b.Property<string>("DateOfBirthEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DateOfBirthRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DateOfBirthUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GenderEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GenderRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GenderUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NationalityEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NationalityRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NationalityUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PersonalInformations");
                });

            modelBuilder.Entity("Orinov.Domain.Entities.Publication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AdditionalRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AdditionalUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AuthorsEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AuthorsRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AuthorsUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CVModelId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsBook")
                        .HasColumnType("boolean");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PublishedYear")
                        .HasColumnType("integer");

                    b.Property<string>("ThemeEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ThemeRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ThemeUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publications");
                });

            modelBuilder.Entity("Orinov.Domain.Entities.ResearchInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CVModelId")
                        .HasColumnType("integer");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TitleRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TitleUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ResearchInterests");
                });

            modelBuilder.Entity("Orinov.Domain.Entities.FileModel", b =>
                {
                    b.HasOne("Orinov.Domain.Entities.Event", null)
                        .WithMany("Files")
                        .HasForeignKey("EventId");

                    b.HasOne("Orinov.Domain.Entities.Publication", null)
                        .WithMany("Files")
                        .HasForeignKey("PublicationId");
                });

            modelBuilder.Entity("Orinov.Domain.Entities.Event", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("Orinov.Domain.Entities.Publication", b =>
                {
                    b.Navigation("Files");
                });
#pragma warning restore 612, 618
        }
    }
}
